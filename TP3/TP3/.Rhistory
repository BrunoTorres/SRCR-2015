fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,8), threshold = 0.1)
dataset <- read.csv("/Users/brunopereira/Documents/SourceTree/SRCR/TP3/DadosRandomTP3.csv",header=TRUE,sep=";",dec=".")
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,8), threshold = 0.1)
dataset <- read.csv("/Users/brunopereira/Documents/SourceTree/SRCR/TP3/DadosTP3.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:814, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,8), threshold = 0.1)
dataset <- read.csv("/Users/brunopereira/Documents/SourceTree/SRCR/TP3/DadosRandom.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:826, ]
testset <- dataset[827:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1,algorithm = "backprop")
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1,algorithm = "backprop",learningrate=0.01)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1,linear.output=FALSE,algorithm = "backprop",learningrate=0.01)
print(fadiganet)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1,linear.output=TRUE,algorithm = "backprop",learningrate=0.01)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1,learningrate = 0.01, algorithm = "backprop", err.fct = "sse",     linear.output = FALSE)
print(fadiganet)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1,learningrate = 0.01, algorithm = "backprop", err.fct = "sse",     linear.output = TRUE)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1,learningrate = 0.01, algorithm = "rprop-")
print(fadiganet)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,8), threshold = 0.1, algorithm = "rprop-")
dataset <- read.csv("/Users/brunopereira/Documents/SourceTree/SRCR/TP3/DadosRandom.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:832, ]
testset <- dataset[833:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1")
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,8), threshold = 0.1)
h
jpj
jpj
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3DadosRandomTP3.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.01)
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3DadosRandomTP3.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(8,6), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3DadosRandomTP3.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean+Performance.DDCMean+Performance.AEDMean, trainset, hidden = c(16,8), threshold = 0.1)
temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3DadosRandomTP3.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,8), threshold = 0.1)
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3DadosRandomTP3.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(16,8), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet<-neuralnet(formula = FatigueLevel ~ Performance.KDTMean + Performance.MAMean +     Performance.MVMean + Performance.TBCMean + Performance.DDCMean +     Performance.DMSMean + Performance.AEDMean + Performance.ADMSLMean +     Performance.Task, data = trainset, hidden = c(8, 6), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet<-neuralnet(formula = FatigueLevel ~ Performance.KDTMean + Performance.MAMean +     Performance.MVMean + Performance.TBCMean + Performance.DDCMean +     Performance.DMSMean + Performance.AEDMean + Performance.ADMSLMean +     Performance.Task, data = trainset, hidden = c(16, 8), threshold = 0.1,     algorithm = "sag")
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet<-neuralnet(formula = FatigueLevel ~ Performance.MAMean + Performance.MVMean +     Performance.DDCMean + Performance.AEDMean, data = trainset,     hidden = c(16, 8), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\DadosTP3_2.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(8,6), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DMSMean, trainset, hidden = c(20,16,6), threshold = 0.01)
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean+Performance.DDCMean+Performance.AEDMean, trainset, hidden = c(16,8), threshold = 0.1)
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\DadosTP3_2.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean+Performance.DDCMean+Performance.AEDMean, trainset, hidden = c(16,8), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\DadosTP3_2.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,6), threshold = 0.01)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean+Performance.DDCMean+Performance.AEDMean, trainset, hidden = c(16,8), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
#temp_test
temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean","Performance.DDCMean","Performance.AEDMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
library("neuralnet")
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\DadosTP3_2.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean, trainset, hidden = c(4,2), threshold = 0.01)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
temp_test <- subset(testset, select = c("Performance.MAMean","Performance.MVMean"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean+Performance.DDCMean+Performance.DMSMean, trainset, hidden = c(8,6), threshold = 0.01)
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean+Performance.DDCMean+Performance.DMSMean, trainset, hidden = c(8,6), threshold = 0.1)
fadiganet <- neuralnet(FatigueLevel ~ Performance.MAMean+Performance.MVMean+Performance.DDCMean+Performance.DMSMean, trainset, hidden = c(8,6), threshold = 0.1)
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean, trainset, hidden = c(10,8), threshold = 0.1)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean"))
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
#results
results$prediction <- round(results$prediction)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(12,8), threshold = 0.1)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
print(fadiganet)
?neuralnet
plot(fadiganet, rep = "best")
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(30,15), threshold = 0.1)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
print(fadiganet)
?neuralnet
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(50,40), threshold = 0.1)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
print(fadiganet)
?neuralnet
#ESCALA: 0-7
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSETE.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean, trainset, hidden = c(10,8), threshold = 0.1)
library("neuralnet")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean, trainset, hidden = c(10,8), threshold = 0.1)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSETE.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean, trainset, hidden = c(10,8), threshold = 0.1)
temp_test <- subset(testset, select = c("Performance.KDTMean","Performance.MAMean","Performance.MVMean","Performance.TBCMean","Performance.DDCMean","Performance.DMSMean","Performance.AEDMean","Performance.ADMSLMean","Performance.Task"))
fadiganet.results <- compute(fadiganet, temp_test)
results <- data.frame(actual = testset$FatigueLevel, prediction = fadiganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
print(fadiganet)
?neuralnet
library("neuralnet")
#ESCALA: 1-7
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSETE.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(50,40), threshold = 0.1)
library("neuralnet")
#ESCALA: 1-7
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSETE.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:845, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
?neuralnet
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSEIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir5e4.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir2e3.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
p
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaQUATRO.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2unir4e5e6e7.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
#Teste 7: ESCALA: 1-3 (Unindo 1 a 2 e 3, 4 a 5, 6 a 7)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 8: ESCALA: 1-2
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2unir4e5e6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 7: ESCALA: 1-3 (Unindo 1 a 2 e 3, 4 a 5, 6 a 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 8: ESCALA: 1-2
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaQUATRO.csv",header=TRUE,sep=";",dec=".")
#Teste 6: ESCALA: 1-3 (Unindo 1 a 2, 4 a 5 e 6 e 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2unir4e5e6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 7: ESCALA: 1-3 (Unindo 1 a 2 e 3, 4 a 5, 6 a 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 8: ESCALA: 1-2
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir2e3.csv",header=TRUE,sep=";",dec=".")
#Teste 5: ESCALA: 1-4
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaQUATRO.csv",header=TRUE,sep=";",dec=".")
#Teste 6: ESCALA: 1-3 (Unindo 1 a 2, 4 a 5 e 6 e 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2unir4e5e6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 7: ESCALA: 1-3 (Unindo 1 a 2 e 3, 4 a 5, 6 a 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 8: ESCALA: 1-2
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir5e4.csv",header=TRUE,sep=";",dec=".")
#Teste 4: ESCALA: 1-5 (Unindo 2 a 3)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir2e3.csv",header=TRUE,sep=";",dec=".")
#Teste 5: ESCALA: 1-4
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaQUATRO.csv",header=TRUE,sep=";",dec=".")
#Teste 6: ESCALA: 1-3 (Unindo 1 a 2, 4 a 5 e 6 e 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2unir4e5e6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 7: ESCALA: 1-3 (Unindo 1 a 2 e 3, 4 a 5, 6 a 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 8: ESCALA: 1-2
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSEIS.csv",header=TRUE,sep=";",dec=".")
#Teste 3: ESCALA: 1-5 (Unindo 4 a 5)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir5e4.csv",header=TRUE,sep=";",dec=".")
#Teste 4: ESCALA: 1-5 (Unindo 2 a 3)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir2e3.csv",header=TRUE,sep=";",dec=".")
#Teste 5: ESCALA: 1-4
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaQUATRO.csv",header=TRUE,sep=";",dec=".")
#Teste 6: ESCALA: 1-3 (Unindo 1 a 2, 4 a 5 e 6 e 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2unir4e5e6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 7: ESCALA: 1-3 (Unindo 1 a 2 e 3, 4 a 5, 6 a 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 8: ESCALA: 1-2
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSETE.csv",header=TRUE,sep=";",dec=".")
#Teste 2: ESCALA: 1-6 (Igual a anterior)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaSEIS.csv",header=TRUE,sep=";",dec=".")
#Teste 3: ESCALA: 1-5 (Unindo 4 a 5)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir5e4.csv",header=TRUE,sep=";",dec=".")
#Teste 4: ESCALA: 1-5 (Unindo 2 a 3)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaCINCOunir2e3.csv",header=TRUE,sep=";",dec=".")
#Teste 5: ESCALA: 1-4
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaQUATRO.csv",header=TRUE,sep=";",dec=".")
#Teste 6: ESCALA: 1-3 (Unindo 1 a 2, 4 a 5 e 6 e 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2unir4e5e6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 7: ESCALA: 1-3 (Unindo 1 a 2 e 3, 4 a 5, 6 a 7)
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaTRESunir1e2e3unir4e5unir6e7.csv",header=TRUE,sep=";",dec=".")
#Teste 8: ESCALA: 1-2
#dataset <- read.csv("C:\\Users\\patricia\\Desktop\\SRCR-2015\\TP3\\TerceiroPonto\\DadosTP3NiveisUMaDOIS.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
#Usamos o a formula correspondente ao teste 3 do segundo ponto
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
library("neuralnet")
dataset <- read.csv("/Users/brunopereira/Downloads/cardata.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
trainset <- dataset[1:1700, ]
testset <- dataset[1701:1729, ]
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+Lug-Boot+Safety, trainset, hidden = c(24,20), threshold = 0.1)
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+Lug-Boot+Safety, trainset, hidden = c(24,20), threshold = 0.1)
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(24,20), threshold = 0.1)
dataset <- read.csv("/Users/brunopereira/Downloads/car.data.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:1700, ]
testset <- dataset[1701:1729, ]
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(24,20), threshold = 0.1)
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(12,8), threshold = 0.1)
trainset <- dataset[1:700, ]
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(12,8), threshold = 0.1)
print(nganet)
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(16,10), threshold = 0.1)
print(nganet)
nganet.results <- compute(nganet, temp_test)
temp_test <- subset(testset, select = c("Buying","Maint","Doors","Persons","LugBoot","Safety"))
nganet.results <- compute(nganet, temp_test)
results <- data.frame(actual = testset$Result, prediction = nganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
trainset <- dataset[1:1700, ]
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(16,10), threshold = 0.1)
trainset <- dataset[1:1728, ]
testset <- dataset[1000:1001, ]
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(16,10), threshold = 0.1)
library("neuralnet")
print(nganet)
temp_test <- subset(testset, select = c("Buying","Maint","Doors","Persons","LugBoot","Safety"))
nganet.results <- compute(nganet, temp_test)
results <- data.frame(actual = testset$Result, prediction = nganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
testset <- dataset[1000:1700, ]
temp_test <- subset(testset, select = c("Buying","Maint","Doors","Persons","LugBoot","Safety"))
nganet.results <- compute(nganet, temp_test)
results <- data.frame(actual = testset$Result, prediction = nganet.results$net.result)
results$prediction <- round(results$prediction)
View(results)
print(nganet)
nganet <- neuralnet(Result ~ Buying+Maint+Doors+Persons+LugBoot+Safety, trainset, hidden = c(16,10), threshold = 0.1)
print(nganet)
library("neuralnet")
dataset <- read.csv("/Users/brunopereira/Documents/SourceTree/SRCR/TP3/DadosTP3_2.csv",header=TRUE,sep=";",dec=".")
trainset <- dataset[1:700, ]
testset <- dataset[701:844, ]
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16), threshold = 0.1)
print(fadiganet)
fadiganet <- neuralnet(FatigueLevel ~ Performance.KDTMean+Performance.MAMean+Performance.MVMean+Performance.TBCMean+Performance.DDCMean+Performance.DMSMean+Performance.AEDMean+Performance.ADMSLMean+Performance.Task, trainset, hidden = c(20,16,6), threshold = 0.01)
